/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {


    macros {
        /**
         * Temporarily switches to a layer (`&mo`) while a modifier is held.
         * Analogous to QMK's `LM()`, using a parameterized macro.
         *
         * Params:
         *  1. Layer to switch to
         *  2. Modifier to press while layer is active
         *
         * Example:
         *  `&lm NUM_LAYER LSHIFT`
         */
        lm: lm {
            compatible = "zmk,behavior-macro-two-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <2>;
            bindings
                = <&macro_param_1to1>
                , <&macro_press &mo MACRO_PLACEHOLDER>
                , <&macro_param_2to1>
                , <&macro_press &kp MACRO_PLACEHOLDER>
                , <&macro_pause_for_release>
                , <&macro_param_2to1>
                , <&macro_release &kp MACRO_PLACEHOLDER>
                , <&macro_param_1to1>
                , <&macro_release &mo MACRO_PLACEHOLDER>
                ;
        };
    };

    behaviors {
        HML: HML {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <36 37 38 39 40 41 30 32 31 18 6 7 8 9 10 11 23 22 21 20 19 33 34 35>;
        };

        HMR: HMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <36 37 38 39 40 41 24 12 0 1 2 3 5 4 17 16 15 14 13 25 26 27 28 29>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <27 28>;
        };

        combo_escape {
            bindings = <&kp ESCAPE>;
            key-positions = <38 39>;
        };

        combo_minus {
            bindings = <&kp MINUS>;
            key-positions = <10 9>;
        };

        combo_equals {
            bindings = <&kp EQUAL>;
            key-positions = <34 33>;
        };

        combo_quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <39 22>;
        };

        combo_enter {
            bindings = <&kp ENTER>;
            key-positions = <7 8 9>;
        };

        comgo_enter_2 {
            bindings = <&kp ENTER>;
            key-positions = <28 26>;
        };

        enter_3 {
            bindings = <&kp ENTER>;
            key-positions = <32 33>;
        };

        escape_2 {
            bindings = <&kp ESCAPE>;
            key-positions = <26 27>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <39 34>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "layer_0";
            bindings = <
&none  &kp Q                &kp W            &kp E            &kp R              &kp T            &kp Y      &kp U               &kp I             &kp O             &kp P                    &none
&none  &HML LEFT_CONTROL A  &HML LEFT_ALT S  &HML LEFT_GUI D  &HML LEFT_SHIFT F  &lt 2 G          &lt 1 H    &HMR RIGHT_SHIFT J  &HMR RIGHT_GUI K  &HMR RIGHT_ALT L  &HMR RIGHT_CONTROL SEMI  &none
&none  &kp Z                &kp X            &lt 1 C          &kp V              &kp B            &kp N      &kp M               &kp COMMA         &kp DOT           &kp ENTER                &none
                                             &mo 1            &kp ESCAPE         &kp BACKSPACE    &kp SPACE  &kp TAB             &mo 3
            >;
        };

        layer_1 {
            display-name = "layer_1";
            bindings = <
&trans  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6    &kp F7    &kp F8  &kp F9     &kp F10  &none
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp F11  &none
&trans  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0    &trans    &trans    &trans  &trans     &kp F12  &trans
                                    &trans        &trans        &trans          &trans    &trans    &trans
            >;
        };

        layer_2 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "layer_2";
            bindings = <
&none  &none  &none  &none       &none      &none        &kp AT           &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp AMPERSAND  &kp ASTERISK   &none
&none  &none  &none  &none       &none      &none        &kp CARET        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DOLLAR     &kp HASH       &none
&none  &none  &none  &none       &none      &none        &kp PRCNT        &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PIPE       &kp BACKSLASH  &none
                     &kp DELETE  &kp LG(C)  &kp LG(V)    &kp EXCLAMATION  &kp GRAVE             &none
            >;
        };

        bluetooth {
            display-name = "layer_3";
            bindings = <
&none  &bt BT_CLR    &bt BT_CLR_ALL  &none         &none         &none           &none  &none  &none  &none  &none  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none  &none  &none  &none  &none  &none
&none  &none         &none           &none         &none         &none           &none  &none  &none  &none  &none  &none
                                     &none         &none         &none           &none  &none  &none
            >;
        };

        misc {
            bindings = <
&none  &none  &none  &none    &none      &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &kp TAB  &kp GRAVE  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none    &none      &none    &none  &none  &none  &none  &none  &none
                     &none    &none      &none    &none  &none  &none
            >;
        };
    };
};
